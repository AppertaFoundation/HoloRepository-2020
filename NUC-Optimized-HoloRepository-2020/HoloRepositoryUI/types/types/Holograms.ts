import { IAuthor, IHumanName, IPractitioner, IPatient } from "./Patients";

/**
 * Interface representing one image series in a DICOM imaging study. For this project, we assume that every study
 * just hosts exactly one series, so the concepts are used interchangeably.
 * Semantics is similar to the corresponding FHIR resource.
 */
export interface IImagingStudy {
  isid: string;
  subject: {
    pid: string;
    name?: IHumanName;
  };
  endpoint: string;
  numberOfInstances: number;
  previewPictureUrl?: string;
  bodySite?: string;
  date?: string;
  modality?: string;
}

/**
 * Creation modes for holograms.
 */
export enum HologramCreationMode {
  GENERATE_FROM_IMAGING_STUDY = "GENERATE_FROM_IMAGING_STUDY",
  UPLOAD_EXISTING_MODEL = "UPLOAD_EXISTING_MODEL",
  FROM_DEPTHVISOR_RECORDING = "FROM_DEPTHVISOR_RECORDING"
}

/**
 * Interface for a Hologram. Note that, similar to FHIR's ImagingStudy, the actual
 * binary data is not included, just an endpoint where it can be retrieved.
 */
export interface IHologram {
  hid: string;
  title: string;
  pid: string;
  aid: string;
  fileSizeInKb: number;
  creationDate: string;
  creationDescription?: string;
  creationMode?: HologramCreationMode;
  description?: string;
  bodySite?: string;
  dateOfImaging?: string;
  contentType?: string;

  // Note: the following fields are not present in the data from the Accessor API, they are added here in the UI
  patientName?: string;
  authorName?: string;
}

/**
 * Interface for a Pipeline in the HoloPipelines subsystem, corresponding to one
 * particular image processing flow.
 */
export interface IPipeline {
  plid: string;
  title: string;
  description: string;
  inputConstraints: [string, string][];
  inputExampleImageUrl?: string;
  outputExampleImageUrl?: string;
}

/**
 * Interface for the POST request to the back-end, which will then be forwarded to the respective
 * endpoint. The shared interface contains the metadata that is (implicitly or explicitly)
 * provided by the user of the UI. These attributes are present in all types of hologram creation.
 */
export interface IHologramCreationRequest {
  patient: IPatient;
  author: IAuthor;
  title: string;
  description: string;
  bodySite: string;
  dateOfImaging: string;
}

/**
 * Interface for POST requests to trigger HoloPipelines.
 */
export interface IHologramCreationRequest_Generate {
  // Info needed for HoloPipelines on how to generate the new hologram
  plid: string;
  imagingStudyEndpoint: string;

  // Additional data that HoloPipelines will just pass on to HoloStorageAccessor
  medicalData: IHologramCreationRequest;

  // Data that needs to be generated by HoloPipelines for the POST /holograms to the Accessor:
  // hologramFile, fileSizeInKb, creationDate, creationDescription, contentType, creationMode
}

/**
 * Interface for responses to POST requests triggering HoloPipelines.
 */
export interface IHologramCreationResponse_Generate {
  jid: string;
}

/**
 * Interface for POST requests to directly upload 3D models to the Accessor.
 */
export interface IHologramCreationRequest_Upload extends IHologramCreationRequest {
  hologramFile: File;
  creationMode: HologramCreationMode.UPLOAD_EXISTING_MODEL;
  fileSizeInKb: number;
  creationDate: string;
  creationDescription: string;
  contentType: "model/gltf-binary";
}

/**
 * Interface for responses to POST requests directly uploading 3D models to the Accessor.
 */
export interface IHologramCreationResponse_Generate {
  hid: string;
}

/**
 * Interface for responses from GET <HoloPipelinesAPI>/jobs/<jid>/state.
 */
export interface IJobStateResponse {
  state?: string;
  age?: number;
  message?: string;
}
