version: '3'
services:
  holorepository-ui-client:
    build:
      context: ./HoloRepositoryUI
      dockerfile: ./client/Dockerfile
      args:
        - REACT_APP_BACKEND_HOST=http://localhost
        - REACT_APP_BACKEND_PORT=3001
        - REACT_APP_BACKEND_TIMEOUT=15000
    ports:
      - "3000:3000"
  holorepository-ui-server:
    build:
      context: ./HoloRepositoryUI
      dockerfile: ./server/Dockerfile
    env_file: ./HoloRepositoryUI/server/.env.local
    ports:
      - "3001:3001"
  holopipelines-core:
    build: ./HoloPipelines
    env_file: ./HoloPipelines/.env
    ports:
      - "3100:3100"
    links:
      - holopipelines-models__dense_vnet_abdominal_ct
      - holopipelines-models__brain_segmentation
      - holostorage-accessor
    environment:
      - MODEL_ABDOMINAL_SEGMENTATION_HOST=http://holopipelines-models__dense_vnet_abdominal_ct
      - MODEL_BRAIN_SEGMENTATION_HOST=http://holopipelines-models__brain_segmentation
      - HOLOSTORAGE_ACCESSOR_HOST=http://holostorage-accessor
  holopipelines-models__dense_vnet_abdominal_ct:
    build: ./HoloPipelines/models/dense_vnet_abdominal_ct
    ports:
      - "5000:5000"
  holopipelines-models__brain_segmentation:
    build: ./HoloPipelines/models/brain_segmentation
    ports:
      - "5002:5002"
  holostorage-accessor:
    build: ./HoloStorageAccessor
    env_file: ./HoloStorageAccessor/.env
    ports:
      - "3200:3200"
  holosynthaccess-client:
    build:
      context: ./HoloSynthAccess 
      dockerfile: ./client/Dockerfile
    env_file: ./HoloSynthAccess/client/.env.local
    ports:
      - "3005:3005"
  holosynthaccess-server:
    build:
      context: ./HoloSynthAccess
      dockerfile: ./server/Dockerfile
    env_file: ./HoloSynthAccess/server/.env
    ports:
      - "3006:3006"
  fhir-api:
    build: 
      context: ./fhir-server
      dockerfile: ./build/docker/Dockerfile
      args:
        FHIR_VERSION: R4
    restart: on-failure
    environment:
      FHIRServer__Security__Enabled: "false"
      SqlServer__ConnectionString: "Server=tcp:sql,1433;Initial Catalog=FHIR;Persist Security Info=False;User ID=sa;Password=TestPassword1!;MultipleActiveResultSets=False;Connection Timeout=30;"
      SqlServer__AllowDatabaseCreation: "true"
      SqlServer__Initialize: "true"
      DataStore: "SqlServer"
    ports:     
      - "8080:8080"
    depends_on:
      - sql
  sql:
    image: "mcr.microsoft.com/mssql/server"
    environment:
      SA_PASSWORD: TestPassword1!
      ACCEPT_EULA: "Y"
    healthcheck:
        test: ["CMD", "/opt/mssql-tools/bin/sqlcmd","-U sa -P ${SAPASSWORD} -Q 'SELECT * FROM INFORMATION_SCHEMA.TABLES'"]
        interval: 10s
        timeout: 10s
        retries: 6
