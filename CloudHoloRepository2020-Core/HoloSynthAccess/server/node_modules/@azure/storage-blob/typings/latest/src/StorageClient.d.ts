import { StorageClientContext } from "./generated/src/storageClientContext";
import { Pipeline } from "./Pipeline";
import { AnonymousCredential } from "./credentials/AnonymousCredential";
import { StorageSharedKeyCredential } from "./credentials/StorageSharedKeyCredential";
import { TokenCredential } from "@azure/core-http";
import { SpanOptions } from "@opentelemetry/types";
/**
 * An interface for options common to every remote operation.
 */
export interface CommonOptions {
    /**
     * Options to configure spans created when tracing is enabled.
     */
    tracingOptions?: OperationTracingOptions;
}
export interface OperationTracingOptions {
    /**
     * OpenTelemetry SpanOptions used to create a span when tracing is enabled.
     */
    spanOptions?: SpanOptions;
}
/**
 * A StorageClient represents a based URL class for {@link BlobServiceClient}, {@link ContainerClient}
 * and etc.
 *
 * @export
 * @class StorageClient
 */
export declare abstract class StorageClient {
    /**
     * Encoded URL string value.
     *
     * @type {string}
     * @memberof StorageClient
     */
    readonly url: string;
    readonly accountName: string;
    /**
     * Request policy pipeline.
     *
     * @internal
     * @ignore
     * @type {Pipeline}
     * @memberof StorageClient
     */
    protected readonly pipeline: Pipeline;
    /**
     * Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.
     *
     * @type {StorageSharedKeyCredential | AnonymousCredential | TokenCredential}
     * @memberof StorageClient
     */
    readonly credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;
    /**
     * StorageClient is a reference to protocol layer operations entry, which is
     * generated by AutoRest generator.
     *
     * @protected
     * @type {StorageClientContext}
     * @memberof StorageClient
     */
    protected readonly storageClientContext: StorageClientContext;
    /**
     * @protected
     * @type {boolean}
     * @memberof StorageClient
     */
    protected readonly isHttps: boolean;
    /**
     * Creates an instance of StorageClient.
     * @param {string} url url to resource
     * @param {Pipeline} pipeline request policy pipeline.
     * @memberof StorageClient
     */
    protected constructor(url: string, pipeline: Pipeline);
}
//# sourceMappingURL=StorageClient.d.ts.map